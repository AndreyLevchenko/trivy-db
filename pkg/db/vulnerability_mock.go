package db

import (
	"github.com/aquasecurity/trivy-db/pkg/types"
	bolt "github.com/etcd-io/bbolt"
	"github.com/stretchr/testify/mock"
)

type MockVulnDB struct {
	mock.Mock
}

func (_m *MockVulnDB) Update(a, b string, c types.Vulnerability) error {
	ret := _m.Called(a, b, c)
	return ret.Error(0)
}

func (_m *MockVulnDB) BatchUpdate(f func(bucket *bolt.Bucket) error) error {
	ret := _m.Called(f)
	return ret.Error(0)
}

func (_m *MockVulnDB) Get(a string) (map[string]types.Vulnerability, error) {
	ret := _m.Called(a)
	ret0 := ret.Get(0)
	if ret0 == nil {
		return nil, ret.Error(1)
	}
	r, ok := ret0.(map[string]types.Vulnerability)
	if !ok {
		return nil, ret.Error(1)
	}
	return r, ret.Error(1)
}

func (_m *MockVulnDB) Put(tx *bolt.Tx, cveID, source string, vuln types.Vulnerability) error {
	ret := _m.Called(tx, cveID, source, vuln)
	return ret.Error(0)
}
